name: Test and Deploy
on: [push]

jobs:
  windows-build-tests:
    strategy:
      matrix:
        pyversion: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Install latests stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run Cargo tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p discrust_core
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Build Wheels with maturin
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          command: build
          args: --release --strip --interpreter python
      - name: Install wheel
        run: |
          pip install numpy pandas
          pip install discrust --no-index --find-links target/wheels --no-deps --force-reinstall
      - name: Run Package Tests
        run: pip install pytest && pytest tests
      - name: Save Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: target/wheels
      - name: Publish Wheels
        uses: messense/maturin-action@v1
        with:
          command: publish
          args: --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --interpreter python --skip-existing

  macos-build-test:
    strategy:
      matrix:
        pyversion: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Install latests stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run Cargo tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p discrust_core
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Build Wheels with maturin
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          command: build
          args: --release --strip --interpreter python${{ matrix.pyversion }} --no-sdist
      - name: Install wheel
        run: |
          pip install numpy pandas
          pip install discrust --no-index --find-links target/wheels --no-deps --force-reinstall
      - name: Run Package Tests
        run: pip install --upgrade pytest && pytest tests
      - name: Save Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: target/wheels
      - name: Publish Wheels
        uses: messense/maturin-action@v1
        with:
          command: publish
          args: --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --interpreter python${{ matrix.pyversion }} --skip-existing --no-sdist

  linux-build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyversion: ["3.7", "3.8", "3.9", "3.10"]
        # target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v2
      - name: Install latests stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run Cargo tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p discrust_core
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyversion }}
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          manylinux: auto
          args: --release --strip --no-sdist --interpreter python${{ matrix.pyversion }}
      - name: Install wheel
        run: |
          pip install numpy pandas
          pip install discrust --no-index --find-links target/wheels --no-deps --force-reinstall
      - name: Run Package Tests
        run: pip install pytest && pytest tests
      # - name: Save Artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: wheels
      #     path: target/wheels
      # - name: Cargo Clean
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: clean
      - name: Publish Wheels
        uses: messense/maturin-action@v1
        with:
          command: publish
          manylinux: auto
          target: x86_64
          args: --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --interpreter python${{ matrix.pyversion }} --skip-existing --no-sdist
      

  # release:
  #   name: Release Wheels
  #   runs-on: ubuntu-latest
  #   # if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [windows-build-tests, macos-build-test]
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #     - name: List Wheels
  #       run: ls -R
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9
  #     - name: Publish to PyPi
  #       env:
  #         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  #         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #       run: |
  #         pip install --upgrade twine
  #         twine upload --skip-existing --repository testpypi --verbose *
